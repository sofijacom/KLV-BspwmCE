# f_00_Void_generic_NoX_FR_team_no-kernel.plug
# version="1.2.0"; revision="-rc5"
# Firstrib Void outfitted with a basic command line console,  midnight commander and no kernel
# Creation date 24Sep2021; Revision date: 31Aug2023
# Copyright FR team; License MIT
# 23Aug2023 - Sofiya / 49704

# build this via terminal commands:
# export CONNECTION_TIMEOUT=-1
# ./build_firstrib_rootfs.sh void default amd64 f_00_Void_amd64_noXsimple00_sofiya-120rc5.plug 
# Architecture i386 will probably successfully build too as an alternative to amd64
# passwd -a root / passwd -a spot
# login is user=root passwd=root

# All the parameters/commandlines can be appropriately changed:
# Simply comment in or comment out till you have what you desire
# or add new packages to the xbps-install lists.
# You can add as many valid commandlines as you want in here.
#
# base system
xbps-install -y base-minimal ncurses-base bash eudev
xbps-install -y file mc xterm xauth wmctrl 
xbps-install -y shadow wpa_supplicant  # needed for most wifi
xbps-install -y ntfs-3g zstd 
xbps-install -y xorg rsync

# Create /root directories
#
mkdir -p /root/Desktop
mkdir -p /root/Documents
mkdir -p /root/Downloads
mkdir -p /root/Music
mkdir -p /root/my-applications
mkdir -p /root/Pictures
mkdir -p /root/Public
mkdir -p /root/Startup
mkdir -p /root/Templates
mkdir -p /root/Videos

# ~/.Xresources for larger xterm uxterm fonts
cat <<'XRESOURCES' > ~/.Xresources
Xft*antialias: true
Xft*autohint: true
XTerm*background: black
XTerm*foreground: grey
XTerm*cursorColor: grey
XTerm.vt100.geometry: 95x25+150
XTerm.vt100.scrollBar: true
XTerm.vt100.scrollbar.width: 8
XTerm*faceName: Monospace Regular 
XTerm*faceSize: 9

UXft*antialias: true
UXft*autohint: true
UXTerm*background: black
UXTerm*foreground: grey
UXTerm*cursorColor: grey
UXTerm.vt100.geometry: 84x25+150
UXTerm*faceName: Monospace Regular 
UXTerm*faceSize: 9
XRESOURCES
 
# set up passwd system
pwconv
grpconv
printf "root\nroot\n" | passwd >/dev/null 2>&1 # Quietly set default root passwd to "root"

# set root to use /bin/bash
usermod --shell /bin/bash root

# Set locale to en_US.UTF-8 
sed -i 's/#en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/default/libc-locales
echo "LANG=en_US.UTF-8" >> /etc/environment
xbps-reconfigure -f glibc-locales

# Set locale to ru_RU.UTF-8
# sed -i 's/en_US.UTF-8 UTF-8/#en_US.UTF-8 UTF-8/' /etc/default/libc-locales
# sed -i -e "s|#ru_RU.UTF-8|ru_RU.UTF-8|" /etc/default/libc-locales
# sed -i 's/en_US.UTF-8 UTF-8/#en_US.UTF-8 UTF-8/' /etc/environment
# echo "LANG=ru_RU.UTF-8" >> /etc/environment
# sed -i 's/en_US.UTF-8 UTF-8/#en_US.UTF-8 UTF-8/' /etc/locale.conf
# echo "LANG=ru_RU.UTF-8" > /etc/locale.conf
# xbps-reconfigure -f glibc-locales

# Set Bash as shell
xbps-alternatives --set bash

## --------------------------------------------------------------------------
## BSPWM Desktop configuration
xbps-install -y bspwm polybar rofi dmenu sxhkd pywal calc mpc feh xcompmgr 
xbps-install -y lxappearance nitrogen brightnessctl 
xbps-install -y gvfs gvfs-smb gvfs-mtp gvfs-cdda giblib
xbps-install -y yad gzip lm_sensors xz sxiv
xbps-install -y lxterminal leafpad mtpaint gpicview tumbler pcmanfm  
xbps-install -y geany gftp ffmpeg gcolor2 gpick
xbps-install -y breeze-snow-cursor-theme breeze-obsidian-cursor-theme breeze-icons 
xbps-install -y octoxbps fox guvcview putty 
xbps-install -y e2fsprogs yelp gparted gufw  
xbps-install -y dosfstools mtools cherrytree 
xbps-install -y squashfs-tools wget gxmessage 

## Desktop configuration
xbps-install -y dunst 
xbps-install -y arandr   
xbps-install -y epdfview 
xbps-install -y i3lock 
xbps-install -y btop 
xbps-install -y lxtask 
xbps-install -y elogind 
xbps-install -y xsettingsd 
xbps-install -y hsetroot slop xdo xsel xtitle zsh vim fzf fd
xbps-install -y zsh-autosuggestions zsh-syntax-highlighting source-highlight

# Browser selection
xbps-install -y firefox

# Fix Firefox Fonts 
#
ln -s /usr/share/fontconfig/conf.avail/70-no-bitmaps.conf /etc/fonts/conf.d/
xbps-reconfigure -f fontconfig

xbps-install -y NetworkManager network-manager-applet
ln -s /etc/sv/NetworkManager /etc/runit/runsvdir/default/NetworkManager

xbps-install -y pulseaudio pulseaudio-utils alsa-plugins-pulseaudio alsa-utils pavucontrol 
ln -s /etc/sv/pulseaudio /etc/runit/runsvdir/default/pulseaudio

# Cups print service
xbps-install -y cups cups-filters cups-pdf
ln -s /etc/sv/cupsd /etc/runit/runsvdir/default/cupsd

# Add ~/Startup directory
#
mkdir -p /root/Startup
cat <<'EOF' >> /usr/local/bin/start-up
#!/bin/bash
sleep 5
user_home=$(eval echo ~${SUDO_USER})
ls $user_home/Startup/* | while read J
do
   "$J" &
done
EOF

chmod +x /usr/local/bin/start-up

# Setup autologin on tty1
#
cp -a /etc/X11/xinit/xinitrc /root/.xinitrc
cp -R /etc/sv/agetty-tty1 /etc/sv/agetty-autologin-tty1
sed -i 's/GETTY_ARGS.*/GETTY_ARGS="--autologin root --noclear"/' /etc/sv/agetty-autologin-tty1/conf  # editing for autologin root
touch /etc/sv/agetty-tty1/down

# Arrange to startx in user's .bash_profile (per Arch Wiki)
# Remove this section if not wanting boot straight into X
touch ~/.bash_profile
cat <<'AUTOLOGIN' > /etc/profile.d/autologin.sh
# autologin on tty1
if [ -z "$DISPLAY" ] && [ "$(fgconsole)" -eq 1 ]; then
exec startx  # remove the exec if you want back to tty1 on exit X

fi
AUTOLOGIN

# Get and install autologin fix
#
cd /etc/sv
wget https://rockedge.org/kernels/data/XBPS_packages/agetty-autologin-tty1.tar.gz
tar xvfz agetty-autologin-tty1.tar.gz

# Use agetty-autologin-tty1 instead of agetty-tty1 
rm -f /etc/runit/runsvdir/default/agetty-tty1
ln -s /etc/sv/agetty-autologin-tty1 /etc/runit/runsvdir/default/agetty-autologin-tty1

# enable dbus service
ln -s /etc/sv/dbus /etc/runit/runsvdir/default/dbus

# echo "# exec dbus-run-session bspwm" >>/root/.xinitrc # to display connected drives
sed -i '51,$d' /root/.xinitrc
echo "/usr/local/bin/start-up &" >>/root/.xinitrc
echo "bspwm" >>/root/.xinitrc  # removed exec to allow dropping out of Xorg to console

# Change to fancy prompt via .bashrc
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/.bashrc -O /root/.bashrc 

# ZSH
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/oh-my-zsh.tar/.alias_zsh -O /root/.alias_zsh
chmod +x /root/.alias_zsh
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/oh-my-zsh.tar/.zshrc -O /root/.zshrc
chmod +x /root/.zshrc
cd /root
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/oh-my-zsh.tar/root-oh-my-zsh.tar.gz -O root-oh-my-zsh.tar.gz
tar xvfz root-oh-my-zsh.tar.gz && rm root-oh-my-zsh.tar.gz
chmod +x /root/.oh-my-zsh/oh-my-zsh.sh

# Enable ZSH by default (uncomment lines 195, 196)
# chsh -s /bin/zsh root
# sed -i 's/zsh/# zsh/' /root/.bashrc 

# User settings config
cd /root
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/root_config.tar.gz -O root_config.tar.gz
tar xvfz root_config.tar.gz && rm root_config.tar.gz

# Pcmanfm .local
cd /root 
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/root_local.tar.gz -O root_local.tar.gz
tar xvfz root_local.tar.gz && rm root_local.tar.gz

# Templates
cd /root
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Templates/Templates.tar.gz -O Templates.tar.gz
tar xvfz Templates.tar.gz && rm Templates.tar.gz

# Colors
cd /root
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/root_colors.tar.gz -O root_colors.tar.gz
tar xvfz root_colors.tar.gz && rm root_colors.tar.gz

# root/.gtkrc-2.0
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/.gtkrc-2.0 -O /root/.gtkrc-2.0

# Config Bspwm
cd /root/.config
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/root.tar.gz -O root.tar.gz
tar xvfz root.tar.gz && rm root.tar.gz
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/btop.tar.gz -O btop.tar.gz
tar xvfz btop.tar.gz && rm btop.tar.gz
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/polybar.tar.gz -O polybar.tar.gz
tar xvfz polybar.tar.gz && rm polybar.tar.gz
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/bspwm.tar.gz -O bspwm.tar.gz
tar xvfz bspwm.tar.gz && rm bspwm.tar.gz
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/sxhkd.tar.gz -O sxhkd.tar.gz
tar xvfz sxhkd.tar.gz && rm sxhkd.tar.gz
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/rofi.tar.gz -O rofi.tar.gz
tar xvfz rofi.tar.gz && rm rofi.tar.gz

# Dunst notifications
# wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Dunst%20notifications/dunstrc -O /etc/dunst/dunstrc

# Greetings
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Greetings_splash.sh -O /root/Startup/Greetings_splash.sh
chmod +x /root/Startup/Greetings_splash.sh

# Composite manager
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/xcompmgr -O /root/Startup/xcompgr
chmod +x /root/Startup/xcompgr

# to disable the touchpad at startup
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/touchpad_toggle -O /root/Startup/touchpad_toggle
chmod +x /root/Startup/touchpad_toggle

# restart_bspwm
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/restart_bspwm -O /root/Startup/restart_bspwm
chmod +x /root/Startup/restart_bspwm

# ss-off
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/ss-off -O /root/Startup/ss-off
chmod +x /root/Startup/ss-off

# Pictures
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Pictures/KLV-Bspwm.png -O /root/Pictures/KLV-Bspwm.png

# Save2flash.desktop
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/save2flash.desktop -O /root/Desktop/save2flash.desktop
 
# splash_hotkeys_start
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/gray_splash_hotkeys_start -O /root/Startup/gray_splash_hotkeys_start
chmod +x /root/Startup/gray_splash_hotkeys_start

# add sudo -spot to .desktop files
cd /usr/share/applications
sed -i 's/^Exec=/&run-as-spot /' octoxbps.desktop
sed -i 's/^Exec=/&run-as-spot /' octoxbps-notifier.desktop

# Gufw
cd /usr/share/applications
sed -i 's/^Exec=/&gufw-pkexec -ssh /' gufw.desktop

# Wallpaper
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/backgrounds.tar.xz -O /backgrounds.tar.xz
tar xJf /backgrounds.tar.xz && rm /backgrounds.tar.xz

# Xlock-xidlehok
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/xlock-xidlehok/xlock-xidlehok.tar.xz -O /xlock-xidlehok.tar.xz
tar xJf /xlock-xidlehok.tar.xz && rm /xlock-xidlehok.tar.xz
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/xlock-xidlehok/xlock_xidlehook -O /root/Startup/xlock_xidlehook
chmod +x /root/Startup/xlock_xidlehook

# Themes Nordic
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Themes/Nordic.tar.xz -O /Nordic.tar.xz
tar xJf /Nordic.tar.xz && rm /Nordic.tar.xz

# Themes Mantis
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Themes/Mantis-themes.tar.xz -O /Mantis-themes.tar.xz
tar xJf /Mantis-themes.tar.xz && rm /Mantis-themes.tar.xz

# Themes Ctlos
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Themes/Ctlos-Themes.tar.xz -O /Ctlos-Themes.tar.xz
tar xJf /Ctlos-Themes.tar.xz && rm /Ctlos-Themes.tar.xz

# Themes OmNu-Ice-Sweet-v40
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Themes/OmNu-Ice-Sweet-v40.tar.xz -O /OmNu-Ice-Sweet-v40.tar.xz
tar xJf /OmNu-Ice-Sweet-v40.tar.xz && rm /OmNu-Ice-Sweet-v40.tar.xz

# Additional fonts for Polybar
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/fonts.tar.xz -O /fonts.tar.xz 
tar xJf /fonts.tar.xz && rm /fonts.tar.xz
 
# Menu Rofi Super + d
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/rofi_run.tar.xz -O /rofi_run.tar.xz
tar xJf /rofi_run.tar.xz && rm /rofi_run.tar.xz
chmod +x /usr/local/bin/rofi_run

# Polybar gui for theme switcher
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/polybar_theme.tar.xz -O /polybar_theme.xz
tar xJf /polybar_theme.xz && rm /polybar_theme.xz
chmod +x /usr/bin/polybar_theme.sh
chmod +x /usr/bin/startpolybar

# Change to fancy prompt via .bashrc
# VAR='PS1="\[\e[0;36m\]┌──\[\e[0m\][ \[\e[0;33m\]\u\[\e[0m\]\[\e[0;32m\]@\[\e[0;36m\]\h\[\e[0m\] ] [ \[\e[0;36m\]\t\[\e[0m\] ]\n\[\e[0;36m\]├── \[\e[0;32m\]\w\[\e[0;36m\]\n\[\e[0;36m\]└>\[\e[0m\]" '
# echo "$VAR" >> ~/.bashrc

## USER CONFIGS: Copy main configs to /etc/skel for all normal users later added
#
xbps-install -y sudo
cp -af /root/. /etc/skel
mkdir -p /etc/skel/.config /etc/skel/.cache /etc/skel/.local/share
echo Still some extra to do here re the likes of runit starting pulseaudio
echo among other user needed config bits and pieces,
echo so probably a few user-config issues noted as needing fixed here

# Give wheel group nopasswd sudo rights and create weedog as wheel group member
echo '%wheel ALL=(ALL) NOPASSWD: ALL' | (VISUAL="tee -a" visudo) # wheel group added to sudo no password required
useradd -m -G wheel -s /bin/bash weedog  # weedog in wheel group so has elevated sudo permissions
printf "weedog\nweedog\n" | passwd weedog >/dev/null 2>&1 # Quietly set default weedog passwd to "weedog"

# Give wheel group nopasswd sudo rights and create spot as wheel group member
echo '%wheel ALL=(ALL) NOPASSWD: ALL' | (VISUAL="tee -a" visudo) # wheel group added to sudo no password required
useradd -m -G wheel -s /bin/bash spot  #spot in wheel group so has elevated sudo permissions
printf "spot\nspot\n" | passwd spot >/dev/null 2>&1 # Quietly set default spot

# Create /home/spot directories
#
mkdir -p /home/spot/Desktop
mkdir -p /home/spot/Documents
mkdir -p /home/spot/Downloads
mkdir -p /home/spot/Music
mkdir -p /home/spot/my-applications
mkdir -p /home/spot/Pictures
mkdir -p /home/spot/Public
mkdir -p /home/spot/Startup
mkdir -p /home/spot/Templates
mkdir -p /home/spot/Videos

# Set permissions
#
chown -R spot:spot /home/spot
chown -R weedog:weedog /home/weedog

# add users to groups and change permissions
#
usermod -a -G audio weedog
usermod -a -G audio spot
usermod -a -G video weedog
usermod -a -G video spot
xhost +
chmod 755 /
chmod 755 /bin
chmod 755 /lib

#### Get KLV custom packages ####
#
# Create and switch to build directory
mkdir -p /root/Build
cd /root/Build

wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/xbps-programs/uextract-4.7_1.noarch.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/xbps-programs/SFS-Load-2.0_1.noarch.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/xbps-programs/tas-1.15_1.noarch.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/xbps-programs/packit-pfind-1.0_1.noarch.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/xbps-programs/run-as-users-1.5_1.noarch.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/xbps-programs/gtkhash-1.1.1_1.x86_64.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/xbps-programs/save2flash-1.9_0.noarch.xbps?inline=false
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/Volume-monitor/pup-volume-monitor-1.15_0.x86_64.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/dcontrol/dcontrol-2.0_1.x86_64.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/dcontrol/tzupdate2-2.0_2.noarch.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/dcontrol/xbps-tools-1.0_3.noarch.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/grub2-4-config/grub2config-2.0.2_1.x86_64.xbps
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/grub2-4-config/grub4dos-1.9.1_1.x86_64.xbps

#### Install KLV custom packages ####

# Register and index packages
cd /root
xbps-rindex -a Build/*.xbps

# Install uextract
xbps-install -y --repository=Build/ uextract-4.7_1

# Install SFS-Load
xbps-install -y --repository=Build/ SFS-Load-2.0_1

# Install tas
xbps-install -y --repository=Build/ tas-1.15_1

# Install Packit and pFind
xbps-install -y --repository=Build/ packit-pfind-1.0_1

# Install run-as-spot and run-as-weedog
xbps-install -y --repository=Build/ run-as-users-1.5_1

# Install gtkhash
xbps-install -y --repository=Build/ gtkhash-1.1.1_1

# Install save2flash
xbps-install -y --repository=Build/ save2flash-1.9_0

# Install Volume-monitor
xbps-install -y --repository=Build/ pup-volume-monitor-1.15_0

# Dcontrol
xbps-install -y --repository=Build/ dcontrol-2.0_1

# Install tzupdate
xbps-install -y --repository=Build/ tzupdate2-2.0_2

# xbps tools
xbps-install -y --repository=Build/ xbps-tools-1.0_3

# grub2config
xbps-install -y --repository=Build/ grub2config-2.0.2_1

# grub4dos
xbps-install -y --repository=Build/ grub4dos-1.9.1_1

# Set execution permissions recursivly for binaries and scripts
chmod +x -R /usr/local/bin

# Clean Up
#

rm -r /root/Build
rm /var/cache/xbps/*

# Default-scripts
cd /
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/default-scripts.tar.xz -O /default-scripts.tar.xz
tar xJf /default-scripts.tar.xz && rm /default-scripts.tar.xz
wget -c https://gitlab.com/sofija.p2018/kla-ot2/-/raw/main/KLV-Bspwm/spiner.tar.xz -O /spiner.tar.xz
tar xJf /spiner.tar.xz && rm /spiner.tar.xz

#-----------------------------------------------------------------------

## TIMEZONE SETUP
# Etc/UTC
#
current_timezone="Etc/UTC"
ln -sf /usr/share/zoneinfo/${current_timezone} /etc/localtime

# Russian
# ln -sf /usr/share/zoneinfo/Europe/Moscow /etc/localtime  # to install from console
#
#current_timezone="Europe/Moscow"
#ln -sf /usr/share/zoneinfo/${current_timezone} /etc/localtime

************************************************************************
#-----------------------------------------------------------------------
echo "desktop build process finished"
